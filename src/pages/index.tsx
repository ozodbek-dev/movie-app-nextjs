import Head from "next/head";
import { API_REQUEST } from "@/services/api.service";
import { GetServerSideProps } from "next";
import {
  IMovie,
  ProductInterface,
  TrendingResponse,
} from "@/interfaces/app.interface";
import { Hero, Modal, Row, SubscriptionPlan } from "@/components";
import { useContext, useEffect } from "react";
import { AuthContext } from "@/components/context/auth.context";
import { useRouter } from "next/router";
import { useInfoStore, useSubscription } from "@/store";

export default function Home({
  trending,
  top_rated,
  tv_top_rated,
  movie_popular,
  comedy,
  family,
  history,
  documentary,
  products,
}: HomeProps): JSX.Element {
  const { isLoading, user } = useContext(AuthContext);
  console.log(products);
  const router = useRouter();
  const { modal } = useInfoStore();
  const { type } = useSubscription();
  useEffect(() => {
    if (user) {
      router.push("/");
    }
    //eslint-disable-next-line
  }, []);
  if (isLoading) return <h1 className={"text-2xl"}>Loading...</h1>;
  // eslint-disable-next-line react/jsx-no-undef
  if (type) return <SubscriptionPlan products={products} />;
  return (
    <div>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <main className="relative pl-4 pb-24 lg:space-y-24 lg:pl-16">
        <Hero trending={trending} />
        <section>
          <Row title={"Top Rated"} movies={top_rated} />
          <div className={"py-10"}></div>
          <Row title={"Tv Shows"} movies={tv_top_rated} isBig={true} />
          <div className={"py-10"}></div>
          <Row title={"Popular Movies"} movies={movie_popular} isBig={true} />
          <div className={"py-10"}></div>
          <Row title={"History"} movies={history.reverse()} isBig={true} />
          <div className={"py-10"}></div>
          <Row title={"Comedy"} movies={comedy} isBig={true} />
          <div className={"py-10"}></div>
          <Row title={"Family"} movies={family.reverse()} isBig={true} />
          <div className={"py-10"}></div>
          <Row title={"Documentary"} movies={documentary} isBig={true} />
        </section>
      </main>
      {modal && <Modal />}
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ req }) => {
  const user_id = req.cookies.user_id;
  const [
    trending,
    top_rated,
    tv_top_rated,
    movie_popular,
    documentary,
    comedy,
    history,
    family,
    products,
  ] = await Promise.all([
    await fetch(API_REQUEST.trending).then((res) => res.json()),
    await fetch(API_REQUEST.top_rated).then((res) => res.json()),
    fetch(API_REQUEST.tv_top_rated).then((res) => res.json()),
    fetch(API_REQUEST.movie_popular).then((res) => res.json()),
    fetch(API_REQUEST.documentary).then((res) => res.json()),
    fetch(API_REQUEST.comedy).then((res) => res.json()),
    fetch(API_REQUEST.history).then((res) => res.json()),
    fetch(API_REQUEST.family).then((res) => res.json()),
    fetch(API_REQUEST.products_list).then(res => res.json()),
    // fetch(`${API_REQUEST.subscription}/${user_id}`).then(res => res.json()),
  ]);
  return {
    props: {
      trending: trending.results,
      top_rated: top_rated.results,
      tv_top_rated: tv_top_rated.results,
      movie_popular: movie_popular.results,
      documentary: documentary.results,
      comedy: comedy.results,
      history: history.results,
      family: family.results,
      products: products.products.data
    },
  };
};

interface HomeProps {
  trending: IMovie[];
  top_rated: IMovie[];
  tv_top_rated: IMovie[];
  movie_popular: IMovie[];
  documentary: IMovie[];
  comedy: IMovie[];
  history: IMovie[];
  family: IMovie[];
  products: ProductInterface[];
}
